<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0" xmlns:camel="http://camel.apache.org/schema/blueprint" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
            http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0 http://aries.apache.org/schemas/blueprint-ext/blueprint-ext.xsd
            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

    <!-- environment properties loaded via classpath (unit testing and in-container via /etc/au.com.forloop.jq.esb.environment.cfg) 
       and local file ("mvn camel:run"). This loading process overrides existing properties, hence the last loaded counts. 
       For "mvn camel:run" there is no properties in the classpath, so the file one is applicable only -->
    <bean id="defaultEnvironmentProperties" class="au.com.forloop.jq.esb.common.fuse.PropertiesLoader">
        <argument index="0" value="file://config/local/au.com.forloop.jq.esb.environment.cfg" />
        <argument index="1" value="classpath:au.com.forloop.jq.esb.environment.cfg" />
    </bean>
    
    <cm:property-placeholder id="environmentProperties" persistent-id="au.com.forloop.jq.esb.environment" defaults-ref="defaultEnvironmentProperties" />

    <!-- create context with properties and routes built via DSL -->
    <camelContext trace="false" id="blueprintContext" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- additional environment properties loaded via file system (applies to "mvn camel:run" only) -->
        <propertyPlaceholder id="properties" location="blueprint:environmentProperties" />
        <package>au.com.forloop.jq.esb.emiratesssim</package>
    </camelContext>
    
    <!-- custom ftp client with a buffer size of 1MB - override via ftpClient.bufferSize= in URIs or by setting a bufferSize property here -->
    <bean id="forloopFtpClient" class="au.com.forloop.jq.esb.common.fuse.ftp.FtpClient" scope="prototype">
    </bean>      

</blueprint>





